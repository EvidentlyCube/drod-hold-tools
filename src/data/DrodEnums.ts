import { UINT_MINUS_1 } from "./DrodCommonTypes";

export enum DataFormat {
	Unknown = 0,
	BMP = 1,
	JPG = 2,
	PNG = 3,
	S3M = 20,
	WAV = 40,
	OGG = 41,
	TTF = 60,
	THEORA = 70
}

export enum ScriptCommandType {
	_CC_Missing = -2,
	_CC_Invalid = -1,
	CC_Appear = 0,
	CC_AppearAt,
	CC_MoveTo,
	CC_Wait,
	CC_WaitForCueEvent,
	CC_WaitForRect,
	CC_Speech,
	CC_Imperative,
	CC_Disappear,
	CC_TurnIntoMonster,
	CC_FaceDirection,
	CC_WaitForNotRect,
	CC_WaitForDoorTo,
	CC_Label,
	CC_GoTo,
	CC_GotoIf,
	CC_WaitForMonster,
	CC_WaitForNotMonster,
	CC_WaitForTurn,
	CC_WaitForCleanRoom,
	CC_WaitForPlayerToFace,
	CC_ActivateItemAt,
	CC_EndScript,
	CC_WaitForHalph,
	CC_WaitForNotHalph,
	CC_WaitForCharacter,
	CC_WaitForNotCharacter,
	CC_FlushSpeech,
	CC_Question,
	CC_SetMusic,
	CC_EndScriptOnExit,
	CC_If,
	CC_IfElse,
	CC_IfEnd,
	CC_LevelEntrance,
	CC_VarSet,
	CC_WaitForVar,
	CC_SetPlayerAppearance,
	CC_CutScene,
	CC_MoveRel,
	CC_PlayerEquipsWeapon,
	CC_AnswerOption,
	CC_BuildMarker,
	CC_AmbientSound,
	CC_AmbientSoundAt,
	CC_WaitForNoBuilding,
	CC_PlayVideo,
	CC_WaitForPlayerToMove,
	CC_WaitForPlayerToTouchMe,
	CC_SetNPCAppearance,
	CC_SetWaterTraversal,
	CC_StartGlobalScript,
	CC_WaitForItem,
	CC_GenerateEntity,
	CC_GameEffect,
	CC_RoomLocationText,
	CC_FlashingText,
	CC_DisplayFilter,
	CC_Build,
	CC_WorldMapMusic,
	CC_WorldMapIcon,
	CC_WorldMapSelect,
	CC_SetPlayerWeapon,
	CC_WaitForSomeoneToPushMe,
	CC_WaitForOpenMove,
	CC_WaitForCleanLevel,
	CC_ChallengeCompleted,
	CC_AttackTile,
	CC_SetPlayerStealth,
	CC_WaitForPlayerInput,
	CC_Return,
	CC_GoSub,
	CC_ImageOverlay,
	CC_WorldMapImage,
	CC_WaitForEntityType,
	CC_WaitForNotEntityType,
	CC_TeleportTo,
	CC_TeleportPlayerTo,
	CC_DestroyTrapdoor,
	CC_IfElseIf,
	CC_FaceTowards,
	CC_GetNaturalTarget,
	CC_GetEntityDirection,
}

export enum MonsterType {
	Roach = 0,
	RoachQueen = 1,
	RoachEgg = 2,
	Goblin = 3,
	Neather = 4,
	Wraithwing = 5,
	EvilEye = 6,
	Serpent = 7,
	TarMother = 8,
	TarBaby = 9,
	Brain = 10,
	Mimic = 11,
	Spider = 12,
	Adder = 13,
	Rattlesnake = 14,
	RockGolem = 15,
	Waterskipper = 16,
	WaterskipperNest = 17,
	Aumtlich = 18,
	Clone = 19,
	Decoy = 20,
	Wubba = 21,
	Seep = 22,
	Stalwart = 23,
	HalphYoung = 24,
	Slayer39th = 25,
	Fegundo = 26,
	FegundoAshes = 27,
	Guard = 28,
	Character = 29,
	MudMother = 30,
	MudBaby = 31,
	GelMother = 32,
	GelBaby = 33,
	Citizen = 34,
	RockGiant = 35,
	HalphOld = 36,
	SlayerOther = 37,
	Soldier = 38,
	Architect = 39,
	Construct = 40,
	Gentryii = 41,
	TemporalClone = 42,
	FluffBaby = 43,

	_CharacterTypesStart = 10000,
	Negotiator = _CharacterTypesStart,
	Citizen1 = 10001,
	Citizen2 = 10002,
	GoblinKing = 10003,
	Instructor = 10004,
	MudCoordinator = 10005,
	TarTechnician = 10006,
	EvilEyeActive = 10007,
	Beethro = 10008,
	Citizen3 = 10009,
	Citizen4 = 10010,
	BeethroInDisguise = 10011,
	Gunthro = 10012,

	_CustomCharactersStart = 20000
}

export enum Speaker {
	Beethro = 0,
	Gunthro = 51,
	Citizen1 = 6,
	Citizen2 = 7,
	Citizen3 = 45,
	Citizen4 = 46,
	Custom = 5,
	EyeActive = 15,
	GoblinKing = 8,
	Instructor = 10,
	MudCoordinator = 11,
	Negotiator = 3,
	None = 4,
	TarTechnician = 13,
	BeethroInDisguise = 47,
	Self = 50,
	Player = 52,
	Halph = 1,
	Slayer = 2,
	Goblin = 9,
	RockGolem = 12,
	Guard = 14,
	Stalwart = 17,
	Roach = 18,
	QRoach = 19,
	RoachEgg = 20,
	WWing = 21,
	Eye = 22,
	Serpent = 23,
	TarMother = 24,
	TarBaby = 25,
	Brain = 26,
	Mimic = 27,
	Spider = 28,
	SerpentG = 29,
	SerpentB = 30,
	WaterSkipper = 31,
	WaterSkipperNest = 32,
	Aumtlich = 33,
	Clone = 34,
	Decoy = 35,
	Wubba = 36,
	Seep = 37,
	Fegundo = 38,
	FegundoAshes = 39,
	MudMother = 40,
	MudBaby = 41,
	GelMother = 42,
	GelBaby = 43,
	Citizen = 16,
	RockGiant = 44,
	Slayer2 = 48,
	Halph2 = 49,
	Stalwart2 = 53,
	Architect = 54,
	Construct = 55,
	Gentryii = 56,
	TemporalClone = 57,
	FluffBaby = 58,

	HoldCharacter = UINT_MINUS_1
}

export enum Mood {
	Normal = 0,
	Aggressive = 1,
	Nervous = 2,
	Strike = 3,
	Happy = 4,
	Dying = 5,
	Talking = 6,
}

export const MonsterIdToName: ReadonlyMap<number, string> = new Map([
	[UINT_MINUS_1, 'None'],
	[MonsterType.Roach, 'Roach'],
	[MonsterType.RoachQueen, 'Roach Queen'],
	[MonsterType.RoachEgg, 'Roach Egg'],
	[MonsterType.Goblin, 'Goblin'],
	[MonsterType.Neather, 'Neather'],
	[MonsterType.Wraithwing, 'Wraithwing'],
	[MonsterType.EvilEye, 'Evil Eye'],
	[MonsterType.Serpent, 'Serpent'],
	[MonsterType.TarMother, 'Tar Mother'],
	[MonsterType.TarBaby, 'Tar Baby'],
	[MonsterType.Brain, 'Brain'],
	[MonsterType.Mimic, 'Mimic'],
	[MonsterType.Spider, 'Spider'],
	[MonsterType.Adder, 'Adder'],
	[MonsterType.Rattlesnake, 'Rattlesnake'],
	[MonsterType.RockGolem, 'Rock Golem'],
	[MonsterType.Waterskipper, 'Waterskipper'],
	[MonsterType.WaterskipperNest, 'Waterskipper Nest'],
	[MonsterType.Aumtlich, 'Aumtlich'],
	[MonsterType.Clone, 'Clone'],
	[MonsterType.Decoy, 'Decoy'],
	[MonsterType.Wubba, 'Wubba'],
	[MonsterType.Seep, 'Seep'],
	[MonsterType.Stalwart, 'Stalwart'],
	[MonsterType.HalphYoung, 'Young Halph'],
	[MonsterType.Slayer39th, '39th Slayer'],
	[MonsterType.Fegundo, 'Fegundo'],
	[MonsterType.FegundoAshes, 'Fegundo Ashes'],
	[MonsterType.Guard, 'Guard'],
	[MonsterType.Character, 'Character'],
	[MonsterType.MudMother, 'Mud Mother'],
	[MonsterType.MudBaby, 'Mud Baby'],
	[MonsterType.GelMother, 'Gel Mother'],
	[MonsterType.GelBaby, 'Gel Baby'],
	[MonsterType.Citizen, 'Citizen'],
	[MonsterType.RockGiant, 'Rock Giant'],
	[MonsterType.HalphOld, 'Halph'],
	[MonsterType.SlayerOther, 'Slayer'],
	[MonsterType.Soldier, 'Soldier'],
	[MonsterType.Architect, 'Architect'],
	[MonsterType.Construct, 'Construct'],
	[MonsterType.Gentryii, 'Gentryii'],
	[MonsterType.TemporalClone, 'Temporal Clone'],
	[MonsterType.FluffBaby, 'Fluff Baby'],
	[MonsterType.Negotiator, 'Negotiator'],
	[MonsterType.Citizen1, 'Citizen1'],
	[MonsterType.Citizen2, 'Citizen2'],
	[MonsterType.GoblinKing, 'Goblin King'],
	[MonsterType.Instructor, 'Instructor'],
	[MonsterType.MudCoordinator, 'Mud Coordinator'],
	[MonsterType.TarTechnician, 'Tar Technician'],
	[MonsterType.EvilEyeActive, 'Evil Eye Active'],
	[MonsterType.Beethro, 'Beethro'],
	[MonsterType.Citizen3, 'Citizen3'],
	[MonsterType.Citizen4, 'Citizen4'],
	[MonsterType.BeethroInDisguise, 'Beethro in disguise'],
	[MonsterType.Gunthro, 'Gunthro'],
]);

export const ScriptCommandTypeToName: ReadonlyMap<number, string> = new Map([
	[ScriptCommandType._CC_Missing, 'Missing command'],
	[ScriptCommandType._CC_Invalid, 'Invalid command'],
	[ScriptCommandType.CC_Appear, 'Appear'],
	[ScriptCommandType.CC_AppearAt, 'Appear At'],
	[ScriptCommandType.CC_MoveTo, 'Move To'],
	[ScriptCommandType.CC_Wait, 'Wait'],
	[ScriptCommandType.CC_WaitForCueEvent, 'Wait For Cue Event'],
	[ScriptCommandType.CC_WaitForRect, 'Wait For Rect'],
	[ScriptCommandType.CC_Speech, 'Speech'],
	[ScriptCommandType.CC_Imperative, 'Imperative'],
	[ScriptCommandType.CC_Disappear, 'CC_Disappear'],
	[ScriptCommandType.CC_TurnIntoMonster, 'CC_TurnIntoMonster'],
	[ScriptCommandType.CC_FaceDirection, 'CC_FaceDirection'],
	[ScriptCommandType.CC_WaitForNotRect, 'CC_WaitForNotRect'],
	[ScriptCommandType.CC_WaitForDoorTo, 'CC_WaitForDoorTo'],
	[ScriptCommandType.CC_Label, 'CC_Label'],
	[ScriptCommandType.CC_GoTo, 'CC_GoTo'],
	[ScriptCommandType.CC_GotoIf, 'CC_GotoIf'],
	[ScriptCommandType.CC_WaitForMonster, 'CC_WaitForMonster'],
	[ScriptCommandType.CC_WaitForNotMonster, 'CC_WaitForNotMonster'],
	[ScriptCommandType.CC_WaitForTurn, 'CC_WaitForTurn'],
	[ScriptCommandType.CC_WaitForCleanRoom, 'CC_WaitForCleanRoom'],
	[ScriptCommandType.CC_WaitForPlayerToFace, 'CC_WaitForPlayerToFace'],
	[ScriptCommandType.CC_ActivateItemAt, 'CC_ActivateItemAt'],
	[ScriptCommandType.CC_EndScript, 'CC_EndScript'],
	[ScriptCommandType.CC_WaitForHalph, 'CC_WaitForHalph'],
	[ScriptCommandType.CC_WaitForNotHalph, 'CC_WaitForNotHalph'],
	[ScriptCommandType.CC_WaitForCharacter, 'CC_WaitForCharacter'],
	[ScriptCommandType.CC_WaitForNotCharacter, 'CC_WaitForNotCharacter'],
	[ScriptCommandType.CC_FlushSpeech, 'CC_FlushSpeech'],
	[ScriptCommandType.CC_Question, 'CC_Question'],
	[ScriptCommandType.CC_SetMusic, 'Set Music'],
	[ScriptCommandType.CC_EndScriptOnExit, 'CC_EndScriptOnExit'],
	[ScriptCommandType.CC_If, 'CC_If'],
	[ScriptCommandType.CC_IfElse, 'CC_IfElse'],
	[ScriptCommandType.CC_IfEnd, 'CC_IfEnd'],
	[ScriptCommandType.CC_LevelEntrance, 'CC_LevelEntrance'],
	[ScriptCommandType.CC_VarSet, 'CC_VarSet'],
	[ScriptCommandType.CC_WaitForVar, 'CC_WaitForVar'],
	[ScriptCommandType.CC_SetPlayerAppearance, 'CC_SetPlayerAppearance'],
	[ScriptCommandType.CC_CutScene, 'CC_CutScene'],
	[ScriptCommandType.CC_MoveRel, 'CC_MoveRel'],
	[ScriptCommandType.CC_PlayerEquipsWeapon, 'CC_PlayerEquipsWeapon'],
	[ScriptCommandType.CC_AnswerOption, 'CC_AnswerOption'],
	[ScriptCommandType.CC_BuildMarker, 'CC_BuildMarker'],
	[ScriptCommandType.CC_AmbientSound, 'Ambient Sound'],
	[ScriptCommandType.CC_AmbientSoundAt, 'Ambient Sound At'],
	[ScriptCommandType.CC_WaitForNoBuilding, 'CC_WaitForNoBuilding'],
	[ScriptCommandType.CC_PlayVideo, 'CC_PlayVideo'],
	[ScriptCommandType.CC_WaitForPlayerToMove, 'CC_WaitForPlayerToMove'],
	[ScriptCommandType.CC_WaitForPlayerToTouchMe, 'CC_WaitForPlayerToTouchMe'],
	[ScriptCommandType.CC_SetNPCAppearance, 'CC_SetNPCAppearance'],
	[ScriptCommandType.CC_SetWaterTraversal, 'CC_SetWaterTraversal'],
	[ScriptCommandType.CC_StartGlobalScript, 'CC_StartGlobalScript'],
	[ScriptCommandType.CC_WaitForItem, 'CC_WaitForItem'],
	[ScriptCommandType.CC_GenerateEntity, 'CC_GenerateEntity'],
	[ScriptCommandType.CC_GameEffect, 'CC_GameEffect'],
	[ScriptCommandType.CC_RoomLocationText, 'CC_RoomLocationText'],
	[ScriptCommandType.CC_FlashingText, 'CC_FlashingText'],
	[ScriptCommandType.CC_DisplayFilter, 'CC_DisplayFilter'],
	[ScriptCommandType.CC_Build, 'CC_Build'],
	[ScriptCommandType.CC_WorldMapMusic, 'World Map Music'],
	[ScriptCommandType.CC_WorldMapIcon, 'World Map Icon'],
	[ScriptCommandType.CC_WorldMapSelect, 'World Map Select'],
	[ScriptCommandType.CC_SetPlayerWeapon, 'Set Player Weapon'],
	[ScriptCommandType.CC_WaitForSomeoneToPushMe, 'Wait for Someone to Push Me'],
	[ScriptCommandType.CC_WaitForOpenMove, 'Wait For Open Move'],
	[ScriptCommandType.CC_WaitForCleanLevel, 'Wait For Clean Level'],
	[ScriptCommandType.CC_ChallengeCompleted, 'Challenge completed'],
	[ScriptCommandType.CC_AttackTile, 'CC_AttackTile'],
	[ScriptCommandType.CC_SetPlayerStealth, 'CC_SetPlayerStealth'],
	[ScriptCommandType.CC_WaitForPlayerInput, 'CC_WaitForPlayerInput'],
	[ScriptCommandType.CC_Return, 'CC_Return'],
	[ScriptCommandType.CC_GoSub, 'CC_GoSub'],
	[ScriptCommandType.CC_ImageOverlay, 'Image Overlay'],
	[ScriptCommandType.CC_WorldMapImage, 'World Map Image'],
	[ScriptCommandType.CC_WaitForEntityType, 'CC_WaitForEntityType'],
	[ScriptCommandType.CC_WaitForNotEntityType, 'CC_WaitForNotEntityType'],
	[ScriptCommandType.CC_TeleportTo, 'CC_TeleportTo'],
	[ScriptCommandType.CC_TeleportPlayerTo, 'CC_TeleportPlayerTo'],
	[ScriptCommandType.CC_DestroyTrapdoor, 'CC_DestroyTrapdoor'],
	[ScriptCommandType.CC_IfElseIf, 'CC_IfElseIf'],
	[ScriptCommandType.CC_FaceTowards, 'CC_FaceTowards'],
	[ScriptCommandType.CC_GetNaturalTarget, 'CC_GetNaturalTarget'],
	[ScriptCommandType.CC_GetEntityDirection, 'CC_GetEntityDirection']
]);

export const SpeakerIdToName: Map<number, string> = new Map([
	[Speaker.Beethro, 'Beethro'],
	[Speaker.Gunthro, 'Gunthro'],
	[Speaker.Citizen1, 'Citizen1'],
	[Speaker.Citizen2, 'Citizen2'],
	[Speaker.Citizen3, 'Citizen3'],
	[Speaker.Citizen4, 'Citizen4'],
	[Speaker.Custom, 'Custom'],
	[Speaker.EyeActive, 'EyeActive'],
	[Speaker.GoblinKing, 'GoblinKing'],
	[Speaker.Instructor, 'Instructor'],
	[Speaker.MudCoordinator, 'MudCoordinator'],
	[Speaker.Negotiator, 'Negotiator'],
	[Speaker.None, 'None'],
	[Speaker.TarTechnician, 'TarTechnician'],
	[Speaker.BeethroInDisguise, 'BeethroInDisguise'],
	[Speaker.Self, 'Self'],
	[Speaker.Player, 'Player'],
	[Speaker.Halph, 'Halph'],
	[Speaker.Slayer, 'Slayer'],
	[Speaker.Goblin, 'Goblin'],
	[Speaker.RockGolem, 'RockGolem'],
	[Speaker.Guard, 'Guard'],
	[Speaker.Stalwart, 'Stalwart'],
	[Speaker.Roach, 'Roach'],
	[Speaker.QRoach, 'QRoach'],
	[Speaker.RoachEgg, 'RoachEgg'],
	[Speaker.WWing, 'WWing'],
	[Speaker.Eye, 'Eye'],
	[Speaker.Serpent, 'Serpent'],
	[Speaker.TarMother, 'TarMother'],
	[Speaker.TarBaby, 'TarBaby'],
	[Speaker.Brain, 'Brain'],
	[Speaker.Mimic, 'Mimic'],
	[Speaker.Spider, 'Spider'],
	[Speaker.SerpentG, 'SerpentG'],
	[Speaker.SerpentB, 'SerpentB'],
	[Speaker.WaterSkipper, 'WaterSkipper'],
	[Speaker.WaterSkipperNest, 'WaterSkipperNest'],
	[Speaker.Aumtlich, 'Aumtlich'],
	[Speaker.Clone, 'Clone'],
	[Speaker.Decoy, 'Decoy'],
	[Speaker.Wubba, 'Wubba'],
	[Speaker.Seep, 'Seep'],
	[Speaker.Fegundo, 'Fegundo'],
	[Speaker.FegundoAshes, 'FegundoAshes'],
	[Speaker.MudMother, 'MudMother'],
	[Speaker.MudBaby, 'MudBaby'],
	[Speaker.GelMother, 'GelMother'],
	[Speaker.GelBaby, 'GelBaby'],
	[Speaker.Citizen, 'Citizen'],
	[Speaker.RockGiant, 'RockGiant'],
	[Speaker.Slayer2, 'Slayer2'],
	[Speaker.Halph2, 'Halph2'],
	[Speaker.Stalwart2, 'Stalwart2'],
	[Speaker.Architect, 'Architect'],
	[Speaker.Construct, 'Construct'],
	[Speaker.Gentryii, 'Gentryii'],
	[Speaker.TemporalClone, 'TemporalClone'],
	[Speaker.FluffBaby, 'FluffBaby'],
]);

export const MoodIdToName: ReadonlyMap<number, string> = new Map([
	[Mood.Normal, 'Normal'],
	[Mood.Aggressive, 'Aggressive'],
	[Mood.Nervous, 'Nervous'],
	[Mood.Strike, 'Strike'],
	[Mood.Happy, 'Happy'],
	[Mood.Dying, 'Dying'],
	[Mood.Talking, 'Talking'],
]);

export const DataFormatToName: ReadonlyMap<number, string> = new Map([
	[DataFormat.Unknown, 'Unknown'],
	[DataFormat.BMP, 'BMP'],
	[DataFormat.JPG, 'JPG'],
	[DataFormat.PNG, 'PNG'],
	[DataFormat.S3M, 'S3M'],
	[DataFormat.WAV, 'WAV'],
	[DataFormat.OGG, 'OGG'],
	[DataFormat.TTF, 'TTF'],
	[DataFormat.THEORA, 'THEORA'],
]);